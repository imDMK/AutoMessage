plugins {
    id("java-library")

    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("net.minecrell.plugin-yml.bukkit") version "0.6.0"
    id("checkstyle")
}

group = "com.github.imdmk.automessage"
version = "1.0.1"

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()

    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://storehouse.okaeri.eu/repository/maven-public/" }
    maven { url = "https://repo.panda-lang.org/releases" }
    maven { url = "https://repo.eternalcode.pl/releases" }
}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT")

    implementation("eu.okaeri:okaeri-configs-yaml-snakeyaml:5.0.0-beta.5")
    implementation("eu.okaeri:okaeri-configs-serdes-commons:5.0.0-beta.5")

    implementation("net.kyori:adventure-platform-bukkit:4.3.1")
    implementation("net.kyori:adventure-text-minimessage:4.14.0")

    implementation("dev.rollczi.litecommands:core:2.8.9")
    implementation("dev.rollczi.litecommands:bukkit-adventure:2.8.9")

    implementation("com.eternalcode:gitcheck:1.0.0")
    implementation("org.bstats:bstats-bukkit:3.0.2")

    testImplementation platform("org.junit:junit-bom:5.10.2")
    testImplementation("org.junit.jupiter:junit-jupiter:5.10.1")
}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion = "10.12.1"

    configFile = file("checkstyle.xml")
}

bukkit {
    name = "AutoMessage"
    version = "${project.version}"
    apiVersion = "1.17"
    main = "com.github.imdmk.automessage.AutoMessagePlugin"
    author = "DMK"
    description = "Simple auto message plugin"
    website = "https://github.com/imDMK/AutoMessage"
}

shadowJar {
    archiveFileName.set("${project.name} v${project.version}.jar")

    dependsOn("checkstyleMain")
    dependsOn("checkstyleTest")
    dependsOn("test")

    exclude(
            "org/intellij/lang/annotations/**",
            "org/jetbrains/annotations/**",
            "META-INF/**",
    )

    def prefix = "com.github.imdmk.automessage.lib"
    [
            "eu.okaeri",
            "net.kyori",
            "dev.rollczi",
            "com.eternalcode",
            "org.bstats",
            "org.yaml",
            "panda.std",
            "org.json.simple",
    ].each { lib ->
        relocate(lib, "${prefix}.${lib}")
    }
}